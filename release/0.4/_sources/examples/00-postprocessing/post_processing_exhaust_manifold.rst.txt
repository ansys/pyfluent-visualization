
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00-postprocessing/post_processing_exhaust_manifold.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-postprocessing_post_processing_exhaust_manifold.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-postprocessing_post_processing_exhaust_manifold.py:

.. _ref_post_processing_exhaust_manifold:

Postprocessing using PyVista and Matplotlib
---------------------------------------------
This example demonstrates the postprocessing capabilities of PyFluent
(using PyVista and Matplotlib) using a 3D model
of an exhaust manifold with high temperature flows passing through.
The flow through the manifold is turbulent and
involves conjugate heat transfer.

This example demonstrates postprocessing using pyvista

- Create surfaces for the display of 3D data.
- Display filled contours of temperature on several surfaces.
- Display velocity vectors.
- Plot quantitative results using Matplotlib

.. GENERATED FROM PYTHON SOURCE LINES 18-20

.. code-block:: default

    # sphinx_gallery_thumbnail_number = -5








.. GENERATED FROM PYTHON SOURCE LINES 21-30

.. code-block:: default

    import ansys.fluent.core as pyfluent
    from ansys.fluent.core import examples

    from ansys.fluent.visualization import set_config
    from ansys.fluent.visualization.matplotlib import Plots
    from ansys.fluent.visualization.pyvista import Graphics

    set_config(blocking=True, set_view_on_display="isometric")








.. GENERATED FROM PYTHON SOURCE LINES 31-33

First, download the case and data file and start Fluent as a service with
Solver mode, double precision, number of processors: 2

.. GENERATED FROM PYTHON SOURCE LINES 33-49

.. code-block:: default


    import_case = examples.download_file(
        filename="exhaust_system.cas.h5", directory="pyfluent/exhaust_system"
    )

    import_data = examples.download_file(
        filename="exhaust_system.dat.h5", directory="pyfluent/exhaust_system"
    )

    session = pyfluent.launch_fluent(
        precision="double", processor_count=2, start_transcript=False
    )

    session.solver.tui.file.read_case(case_file_name=import_case)
    session.solver.tui.file.read_data(case_file_name=import_data)








.. GENERATED FROM PYTHON SOURCE LINES 50-51

Get the graphics object for mesh display

.. GENERATED FROM PYTHON SOURCE LINES 51-54

.. code-block:: default


    graphics = Graphics(session=session)








.. GENERATED FROM PYTHON SOURCE LINES 55-56

Create a graphics object for mesh display

.. GENERATED FROM PYTHON SOURCE LINES 56-59

.. code-block:: default


    mesh1 = graphics.Meshes["mesh-1"]








.. GENERATED FROM PYTHON SOURCE LINES 60-61

Show edges

.. GENERATED FROM PYTHON SOURCE LINES 61-64

.. code-block:: default


    mesh1.show_edges = True








.. GENERATED FROM PYTHON SOURCE LINES 65-66

Get the surfaces list

.. GENERATED FROM PYTHON SOURCE LINES 66-78

.. code-block:: default


    mesh1.surfaces_list = [
        "in1",
        "in2",
        "in3",
        "out1",
        "solid_up:1",
        "solid_up:1:830",
        "solid_up:1:830-shadow",
    ]
    mesh1.display("window-1")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_001.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 79-80

Disable edges and display again

.. GENERATED FROM PYTHON SOURCE LINES 80-84

.. code-block:: default


    mesh1.show_edges = False
    mesh1.display("window-2")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_002.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 85-86

Create plane-surface XY plane

.. GENERATED FROM PYTHON SOURCE LINES 86-93

.. code-block:: default


    surf_xy_plane = graphics.Surfaces["xy-plane"]
    surf_xy_plane.definition.type = "plane-surface"
    plane_surface_xy = surf_xy_plane.definition.plane_surface
    plane_surface_xy.z = -0.0441921
    surf_xy_plane.display("window-3")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_003.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 94-95

Create plane-surface YZ plane

.. GENERATED FROM PYTHON SOURCE LINES 95-102

.. code-block:: default


    surf_yz_plane = graphics.Surfaces["yz-plane"]
    surf_yz_plane.definition.type = "plane-surface"
    plane_surface_yz = surf_yz_plane.definition.plane_surface
    plane_surface_yz.x = -0.174628
    surf_yz_plane.display("window-4")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_004.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 103-104

Create plane-surface ZX plane

.. GENERATED FROM PYTHON SOURCE LINES 104-111

.. code-block:: default


    surf_zx_plane = graphics.Surfaces["zx-plane"]
    surf_zx_plane.definition.type = "plane-surface"
    plane_surface_zx = surf_zx_plane.definition.plane_surface
    plane_surface_zx.y = -0.0627297
    surf_zx_plane.display("window-5")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_005.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 112-113

Create iso-surface on the outlet plane

.. GENERATED FROM PYTHON SOURCE LINES 113-121

.. code-block:: default


    surf_outlet_plane = graphics.Surfaces["outlet-plane"]
    surf_outlet_plane.definition.type = "iso-surface"
    iso_surf1 = surf_outlet_plane.definition.iso_surface
    iso_surf1.field = "y-coordinate"
    iso_surf1.iso_value = -0.125017
    surf_outlet_plane.display("window-3")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_006.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 122-123

Create iso-surface on the mid-plane

.. GENERATED FROM PYTHON SOURCE LINES 123-131

.. code-block:: default


    surf_mid_plane_x = graphics.Surfaces["mid-plane-x"]
    surf_mid_plane_x.definition.type = "iso-surface"
    iso_surf2 = surf_mid_plane_x.definition.iso_surface
    iso_surf2.field = "x-coordinate"
    iso_surf2.iso_value = -0.174
    surf_mid_plane_x.display("window-4")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_007.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 132-133

Create iso-surface using the velocity magnitude

.. GENERATED FROM PYTHON SOURCE LINES 133-142

.. code-block:: default


    surf_vel_contour = graphics.Surfaces["surf-vel-contour"]
    surf_vel_contour.definition.type = "iso-surface"
    iso_surf3 = surf_vel_contour.definition.iso_surface
    iso_surf3.field = "velocity-magnitude"
    iso_surf3.rendering = "contour"
    iso_surf3.iso_value = 0.0
    surf_vel_contour.display("window-5")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_008.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 143-144

Temperature contour on the mid-plane and the outlet

.. GENERATED FROM PYTHON SOURCE LINES 144-150

.. code-block:: default


    temperature_contour = graphics.Contours["contour-temperature"]
    temperature_contour.field = "temperature"
    temperature_contour.surfaces_list = ["mid-plane-x", "outlet-plane"]
    temperature_contour.display("window-6")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_009.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 151-152

Contour plot of temperature on the manifold

.. GENERATED FROM PYTHON SOURCE LINES 152-165

.. code-block:: default


    temperature_contour_manifold = graphics.Contours["contour-temperature-manifold"]
    temperature_contour_manifold.field = "temperature"
    temperature_contour_manifold.surfaces_list = [
        "in1",
        "in2",
        "in3",
        "out1",
        "solid_up:1",
        "solid_up:1:830",
    ]
    temperature_contour_manifold.display("window-7")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_010.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_010.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 166-167

Vector on a predefined surface

.. GENERATED FROM PYTHON SOURCE LINES 167-173

.. code-block:: default


    velocity_vector = graphics.Vectors["velocity-vector"]
    velocity_vector.surfaces_list = ["solid_up:1:830"]
    velocity_vector.scale = 2
    velocity_vector.display("window-8")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_011.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_011.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 174-175

Start the Plot Object for the session

.. GENERATED FROM PYTHON SOURCE LINES 175-177

.. code-block:: default

    plots_session_1 = Plots(session)








.. GENERATED FROM PYTHON SOURCE LINES 178-179

Create a default XY-Plot

.. GENERATED FROM PYTHON SOURCE LINES 179-181

.. code-block:: default

    xy_plot = plots_session_1.XYPlots["xy-plot"]








.. GENERATED FROM PYTHON SOURCE LINES 182-183

Set the surface on which the plot is plotted and the Y-axis function

.. GENERATED FROM PYTHON SOURCE LINES 183-186

.. code-block:: default

    xy_plot.surfaces_list = ["outlet"]
    xy_plot.y_axis_function = "temperature"








.. GENERATED FROM PYTHON SOURCE LINES 187-188

Plot the created XY-Plot

.. GENERATED FROM PYTHON SOURCE LINES 188-190

.. code-block:: default

    xy_plot.plot("window-9")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_012.png
   :alt: XY Plot
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_012.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 191-192

Plot residual

.. GENERATED FROM PYTHON SOURCE LINES 192-198

.. code-block:: default


    matplotlib_plots1 = Plots(session)
    residual = matplotlib_plots1.Monitors["residual"]
    residual.monitor_set_name = "residual"
    residual.plot("window-10")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_013.png
   :alt: residual
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_013.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 199-200

Solve and Plot Solution Monitors.

.. GENERATED FROM PYTHON SOURCE LINES 200-214

.. code-block:: default


    session.solver.tui.solve.initialize.hyb_initialization()
    session.solver.tui.solve.set.number_of_iterations(50)
    session.solver.tui.solve.iterate()
    matplotlib_plots1 = Plots(session)
    mass_bal_rplot = matplotlib_plots1.Monitors["mass-bal-rplot"]
    mass_bal_rplot.monitor_set_name = "mass-bal-rplot"
    mass_bal_rplot.plot("window-11")

    matplotlib_plots1 = Plots(session)
    point_vel_rplot = matplotlib_plots1.Monitors["point-vel-rplot"]
    point_vel_rplot.monitor_set_name = "point-vel-rplot"
    point_vel_rplot.plot("window-12")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_014.png
         :alt: mass-bal-rplot
         :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_014.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_015.png
         :alt: point-vel-rplot
         :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_015.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 215-216

Close Fluent

.. GENERATED FROM PYTHON SOURCE LINES 216-218

.. code-block:: default


    session.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  31.518 seconds)


.. _sphx_glr_download_examples_00-postprocessing_post_processing_exhaust_manifold.py:


.. only :: html

 .. container:: sphx-glr-footer
    :class: sphx-glr-footer-example



  .. container:: sphx-glr-download sphx-glr-download-python

     :download:`Download Python source code: post_processing_exhaust_manifold.py <post_processing_exhaust_manifold.py>`



  .. container:: sphx-glr-download sphx-glr-download-jupyter

     :download:`Download Jupyter notebook: post_processing_exhaust_manifold.ipynb <post_processing_exhaust_manifold.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
