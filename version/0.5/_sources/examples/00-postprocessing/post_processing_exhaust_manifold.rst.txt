
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "examples/00-postprocessing/post_processing_exhaust_manifold.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_examples_00-postprocessing_post_processing_exhaust_manifold.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_examples_00-postprocessing_post_processing_exhaust_manifold.py:

.. _ref_post_processing_exhaust_manifold:

Postprocessing using PyVista and Matplotlib
-------------------------------------------
This example uses PyVista and Matplotlib to demonstrate PyFluent
postprocessing capabilities. The 3D model in this example
is an exhaust manifold that has high temperature flows passing
through it. The flow through the manifold is turbulent and
involves conjugate heat transfer.

.. GENERATED FROM PYTHON SOURCE LINES 13-16

Perform required imports
~~~~~~~~~~~~~~~~~~~~~~~~
Perform required imports and set the configuration.

.. GENERATED FROM PYTHON SOURCE LINES 16-26

.. code-block:: default


    import ansys.fluent.core as pyfluent
    from ansys.fluent.core import examples

    from ansys.fluent.visualization import set_config
    from ansys.fluent.visualization.matplotlib import Plots
    from ansys.fluent.visualization.pyvista import Graphics

    set_config(blocking=True, set_view_on_display="isometric")








.. GENERATED FROM PYTHON SOURCE LINES 27-32

Download files and launch Fluent
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Download the case and data files and launch Fluent as a service in solver
mode with double precision and two processors. Read in the case and data
files.

.. GENERATED FROM PYTHON SOURCE LINES 32-48

.. code-block:: default


    import_case = examples.download_file(
        filename="exhaust_system.cas.h5", directory="pyfluent/exhaust_system"
    )

    import_data = examples.download_file(
        filename="exhaust_system.dat.h5", directory="pyfluent/exhaust_system"
    )

    solver_session = pyfluent.launch_fluent(
        precision="double", processor_count=2, start_transcript=False, mode="solver"
    )

    solver_session.tui.file.read_case(import_case)
    solver_session.tui.file.read_data(import_data)








.. GENERATED FROM PYTHON SOURCE LINES 49-52

Get graphics object
~~~~~~~~~~~~~~~~~~~
Get the graphics object.

.. GENERATED FROM PYTHON SOURCE LINES 52-55

.. code-block:: default


    graphics = Graphics(session=solver_session)








.. GENERATED FROM PYTHON SOURCE LINES 56-59

Create graphics object for mesh display
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a graphics object for the mesh display.

.. GENERATED FROM PYTHON SOURCE LINES 59-62

.. code-block:: default


    mesh1 = graphics.Meshes["mesh-1"]








.. GENERATED FROM PYTHON SOURCE LINES 63-66

Show edges
~~~~~~~~~~
Show edges on the mesh.

.. GENERATED FROM PYTHON SOURCE LINES 66-69

.. code-block:: default


    mesh1.show_edges = True








.. GENERATED FROM PYTHON SOURCE LINES 70-73

Get surfaces list
~~~~~~~~~~~~~~~~~
Get the surfaccase list.

.. GENERATED FROM PYTHON SOURCE LINES 73-85

.. code-block:: default


    mesh1.surfaces_list = [
        "in1",
        "in2",
        "in3",
        "out1",
        "solid_up:1",
        "solid_up:1:830",
        "solid_up:1:830-shadow",
    ]
    mesh1.display("window-1")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_001.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 86-89

Hide edges and display again
~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Hide the edges and display again.

.. GENERATED FROM PYTHON SOURCE LINES 89-93

.. code-block:: default


    mesh1.show_edges = False
    mesh1.display("window-2")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_002.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_002.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 94-97

Create plane-surface XY plane
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a plane-surface XY plane.

.. GENERATED FROM PYTHON SOURCE LINES 97-104

.. code-block:: default


    surf_xy_plane = graphics.Surfaces["xy-plane"]
    surf_xy_plane.definition.type = "plane-surface"
    plane_surface_xy = surf_xy_plane.definition.plane_surface
    plane_surface_xy.z = -0.0441921
    surf_xy_plane.display("window-3")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_003.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_003.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 105-108

Create plane-surface YZ plane
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a plane-surface YZ plane.

.. GENERATED FROM PYTHON SOURCE LINES 108-115

.. code-block:: default


    surf_yz_plane = graphics.Surfaces["yz-plane"]
    surf_yz_plane.definition.type = "plane-surface"
    plane_surface_yz = surf_yz_plane.definition.plane_surface
    plane_surface_yz.x = -0.174628
    surf_yz_plane.display("window-4")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_004.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_004.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 116-119

Create plane-surface ZX plane
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a plane-surface ZX plane.

.. GENERATED FROM PYTHON SOURCE LINES 119-126

.. code-block:: default


    surf_zx_plane = graphics.Surfaces["zx-plane"]
    surf_zx_plane.definition.type = "plane-surface"
    plane_surface_zx = surf_zx_plane.definition.plane_surface
    plane_surface_zx.y = -0.0627297
    surf_zx_plane.display("window-5")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_005.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_005.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 127-130

Create iso-surface on outlet plane
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create an iso-surface on the outlet plane.

.. GENERATED FROM PYTHON SOURCE LINES 130-138

.. code-block:: default


    surf_outlet_plane = graphics.Surfaces["outlet-plane"]
    surf_outlet_plane.definition.type = "iso-surface"
    iso_surf1 = surf_outlet_plane.definition.iso_surface
    iso_surf1.field = "y-coordinate"
    iso_surf1.iso_value = -0.125017
    surf_outlet_plane.display("window-3")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_006.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_006.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 139-142

Create iso-surface on mid-plane
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create an iso-surface on the mid-plane.

.. GENERATED FROM PYTHON SOURCE LINES 142-150

.. code-block:: default


    surf_mid_plane_x = graphics.Surfaces["mid-plane-x"]
    surf_mid_plane_x.definition.type = "iso-surface"
    iso_surf2 = surf_mid_plane_x.definition.iso_surface
    iso_surf2.field = "x-coordinate"
    iso_surf2.iso_value = -0.174
    surf_mid_plane_x.display("window-4")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_007.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_007.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 151-154

Create iso-surface using velocity magnitude
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create an iso-surface using the velocity magnitude.

.. GENERATED FROM PYTHON SOURCE LINES 154-163

.. code-block:: default


    surf_vel_contour = graphics.Surfaces["surf-vel-contour"]
    surf_vel_contour.definition.type = "iso-surface"
    iso_surf3 = surf_vel_contour.definition.iso_surface
    iso_surf3.field = "velocity-magnitude"
    iso_surf3.rendering = "contour"
    iso_surf3.iso_value = 0.0
    surf_vel_contour.display("window-5")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_008.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_008.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 164-167

Create temperature contour on mid-plane and outlet
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a temperature contour on the mid-plane and the outlet.

.. GENERATED FROM PYTHON SOURCE LINES 167-173

.. code-block:: default


    temperature_contour = graphics.Contours["contour-temperature"]
    temperature_contour.field = "temperature"
    temperature_contour.surfaces_list = ["mid-plane-x", "outlet-plane"]
    temperature_contour.display("window-6")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_009.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_009.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 174-177

Create contour plot of temperature on manifold
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Create a contour plot of the temperature on the manifold.

.. GENERATED FROM PYTHON SOURCE LINES 177-190

.. code-block:: default


    temperature_contour_manifold = graphics.Contours["contour-temperature-manifold"]
    temperature_contour_manifold.field = "temperature"
    temperature_contour_manifold.surfaces_list = [
        "in1",
        "in2",
        "in3",
        "out1",
        "solid_up:1",
        "solid_up:1:830",
    ]
    temperature_contour_manifold.display("window-7")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_010.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_010.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 191-194

Create vector
~~~~~~~~~~~~~
Create a vector on a predefined surface.

.. GENERATED FROM PYTHON SOURCE LINES 194-200

.. code-block:: default


    velocity_vector = graphics.Vectors["velocity-vector"]
    velocity_vector.surfaces_list = ["solid_up:1:830"]
    velocity_vector.scale = 2
    velocity_vector.display("window-8")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_011.png
   :alt: post processing exhaust manifold
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_011.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 201-204

Create plot object
~~~~~~~~~~~~~~~~~~
Create the plot object for the session.

.. GENERATED FROM PYTHON SOURCE LINES 204-207

.. code-block:: default


    plots_session_1 = Plots(solver_session)








.. GENERATED FROM PYTHON SOURCE LINES 208-211

Create XY plot
~~~~~~~~~~~~~~
Create the default XY plot.

.. GENERATED FROM PYTHON SOURCE LINES 211-214

.. code-block:: default


    xy_plot = plots_session_1.XYPlots["xy-plot"]








.. GENERATED FROM PYTHON SOURCE LINES 215-218

Set plot surface and Y-axis function
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Set the surface on which to generate the plot and the Y-axis function.

.. GENERATED FROM PYTHON SOURCE LINES 218-222

.. code-block:: default


    xy_plot.surfaces_list = ["outlet"]
    xy_plot.y_axis_function = "temperature"








.. GENERATED FROM PYTHON SOURCE LINES 223-226

Display XY plot
~~~~~~~~~~~~~~~~
Display the generated XY plot.

.. GENERATED FROM PYTHON SOURCE LINES 226-229

.. code-block:: default


    xy_plot.plot("window-9")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_012.png
   :alt: XY Plot
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_012.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 230-233

Create residual plot
~~~~~~~~~~~~~~~~~~~~~~
Create and display the residual plot.

.. GENERATED FROM PYTHON SOURCE LINES 233-239

.. code-block:: default


    matplotlib_plots1 = Plots(solver_session)
    residual = matplotlib_plots1.Monitors["residual"]
    residual.monitor_set_name = "residual"
    residual.plot("window-10")




.. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_013.png
   :alt: residual
   :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_013.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 240-243

Solve and plot solution monitors
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Solve and plot solution monitors.

.. GENERATED FROM PYTHON SOURCE LINES 243-257

.. code-block:: default


    solver_session.tui.solve.initialize.hyb_initialization()
    solver_session.tui.solve.set.number_of_iterations(50)
    solver_session.tui.solve.iterate()
    matplotlib_plots1 = Plots(solver_session)
    mass_bal_rplot = matplotlib_plots1.Monitors["mass-bal-rplot"]
    mass_bal_rplot.monitor_set_name = "mass-bal-rplot"
    mass_bal_rplot.plot("window-11")

    matplotlib_plots1 = Plots(solver_session)
    point_vel_rplot = matplotlib_plots1.Monitors["point-vel-rplot"]
    point_vel_rplot.monitor_set_name = "point-vel-rplot"
    point_vel_rplot.plot("window-12")




.. rst-class:: sphx-glr-horizontal


    *

      .. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_014.png
         :alt: mass-bal-rplot
         :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_014.png
         :class: sphx-glr-multi-img

    *

      .. image-sg:: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_015.png
         :alt: point-vel-rplot
         :srcset: /examples/00-postprocessing/images/sphx_glr_post_processing_exhaust_manifold_015.png
         :class: sphx-glr-multi-img





.. GENERATED FROM PYTHON SOURCE LINES 258-261

Close Fluent
~~~~~~~~~~~~
Close Fluent.

.. GENERATED FROM PYTHON SOURCE LINES 261-263

.. code-block:: default


    solver_session.exit()








.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 2 minutes  30.770 seconds)


.. _sphx_glr_download_examples_00-postprocessing_post_processing_exhaust_manifold.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: post_processing_exhaust_manifold.py <post_processing_exhaust_manifold.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: post_processing_exhaust_manifold.ipynb <post_processing_exhaust_manifold.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
